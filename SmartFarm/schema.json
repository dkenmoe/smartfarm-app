openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/auth/api/admin-dashboard/:
    get:
      operationId: api_auth_api_admin_dashboard_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/auth/api/customers/:
    get:
      operationId: api_auth_api_customers_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerList'
          description: ''
    post:
      operationId: api_auth_api_customers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/auth/api/customers/{id}/:
    get:
      operationId: api_auth_api_customers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: api_auth_api_customers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: api_auth_api_customers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: api_auth_api_customers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/api/farms/:
    get:
      operationId: api_auth_api_farms_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFarmList'
          description: ''
    post:
      operationId: api_auth_api_farms_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
  /api/auth/api/farms/{id}/:
    get:
      operationId: api_auth_api_farms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this farm.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    put:
      operationId: api_auth_api_farms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this farm.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    patch:
      operationId: api_auth_api_farms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this farm.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    delete:
      operationId: api_auth_api_farms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this farm.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/api/roles/:
    get:
      operationId: api_auth_api_roles_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ''
    post:
      operationId: api_auth_api_roles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/auth/api/roles/{id}/:
    get:
      operationId: api_auth_api_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: api_auth_api_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: api_auth_api_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: api_auth_api_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/api/suppliers/:
    get:
      operationId: api_auth_api_suppliers_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupplierList'
          description: ''
    post:
      operationId: api_auth_api_suppliers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/auth/api/suppliers/{id}/:
    get:
      operationId: api_auth_api_suppliers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: api_auth_api_suppliers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: api_auth_api_suppliers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: api_auth_api_suppliers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/api/users/:
    get:
      operationId: api_auth_api_users_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_auth_api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/api/users/{id}/:
    get:
      operationId: api_auth_api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_auth_api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_auth_api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_auth_api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/customers/:
    get:
      operationId: api_auth_customers_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerList'
          description: ''
    post:
      operationId: api_auth_customers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/auth/customers/{id}/:
    get:
      operationId: api_auth_customers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: api_auth_customers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: api_auth_customers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: api_auth_customers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/farms/:
    get:
      operationId: api_auth_farms_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFarmList'
          description: ''
    post:
      operationId: api_auth_farms_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
  /api/auth/farms/{id}/:
    get:
      operationId: api_auth_farms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this farm.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    put:
      operationId: api_auth_farms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this farm.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    patch:
      operationId: api_auth_farms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this farm.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    delete:
      operationId: api_auth_farms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this farm.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/roles/:
    get:
      operationId: api_auth_roles_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ''
    post:
      operationId: api_auth_roles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/auth/roles/{id}/:
    get:
      operationId: api_auth_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: api_auth_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: api_auth_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: api_auth_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/suppliers/:
    get:
      operationId: api_auth_suppliers_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupplierList'
          description: ''
    post:
      operationId: api_auth_suppliers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/auth/suppliers/{id}/:
    get:
      operationId: api_auth_suppliers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: api_auth_suppliers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: api_auth_suppliers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: api_auth_suppliers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/token/refresh/:
    post:
      operationId: api_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/users/:
    get:
      operationId: api_auth_users_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/users/{id}/:
    get:
      operationId: api_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/feed/alerts/:
    get:
      operationId: api_feed_alerts_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlertList'
          description: ''
    post:
      operationId: api_feed_alerts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Alert'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Alert'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
  /api/feed/alerts/{id}/:
    get:
      operationId: api_feed_alerts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alert.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
    put:
      operationId: api_feed_alerts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alert.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Alert'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Alert'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
    patch:
      operationId: api_feed_alerts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alert.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlert'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlert'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
    delete:
      operationId: api_feed_alerts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alert.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/feed/dashboard-metrics/:
    get:
      operationId: api_feed_dashboard_metrics_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/feed/user-activity/:
    get:
      operationId: api_feed_user_activity_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/finance/categories/:
    get:
      operationId: api_finance_categories_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenseCategoryList'
          description: ''
    post:
      operationId: api_finance_categories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExpenseCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExpenseCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategory'
          description: ''
  /api/finance/categories/{id}/:
    get:
      operationId: api_finance_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Catégorie de dépense.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategory'
          description: ''
    put:
      operationId: api_finance_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Catégorie de dépense.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExpenseCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExpenseCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategory'
          description: ''
    patch:
      operationId: api_finance_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Catégorie de dépense.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpenseCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExpenseCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExpenseCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategory'
          description: ''
    delete:
      operationId: api_finance_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Catégorie de dépense.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/expenses/:
    get:
      operationId: api_finance_expenses_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenseList'
          description: ''
    post:
      operationId: api_finance_expenses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
  /api/finance/expenses/{id}/:
    get:
      operationId: api_finance_expenses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dépense.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    put:
      operationId: api_finance_expenses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dépense.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    patch:
      operationId: api_finance_expenses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dépense.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    delete:
      operationId: api_finance_expenses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dépense.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/farms/{farm_id}/expenses/:
    get:
      operationId: api_finance_farms_expenses_list
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenseList'
          description: ''
    post:
      operationId: api_finance_farms_expenses_create
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
  /api/finance/farms/{farm_id}/expenses/{id}/:
    get:
      operationId: api_finance_farms_expenses_retrieve
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dépense.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    put:
      operationId: api_finance_farms_expenses_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dépense.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    patch:
      operationId: api_finance_farms_expenses_partial_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dépense.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    delete:
      operationId: api_finance_farms_expenses_destroy
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dépense.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/payment-methods/:
    get:
      operationId: api_finance_payment_methods_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentMethodList'
          description: ''
    post:
      operationId: api_finance_payment_methods_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
  /api/finance/payment-methods/{id}/:
    get:
      operationId: api_finance_payment_methods_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Méthode de paiement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    put:
      operationId: api_finance_payment_methods_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Méthode de paiement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    patch:
      operationId: api_finance_payment_methods_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Méthode de paiement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethod'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    delete:
      operationId: api_finance_payment_methods_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Méthode de paiement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/sale-items/:
    get:
      operationId: api_finance_sale_items_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSaleItemList'
          description: ''
    post:
      operationId: api_finance_sale_items_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SaleItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SaleItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleItem'
          description: ''
  /api/finance/sale-items/{id}/:
    get:
      operationId: api_finance_sale_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleItem'
          description: ''
    put:
      operationId: api_finance_sale_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SaleItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SaleItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleItem'
          description: ''
    patch:
      operationId: api_finance_sale_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSaleItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSaleItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSaleItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleItem'
          description: ''
    delete:
      operationId: api_finance_sale_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/sales/:
    get:
      operationId: api_finance_sales_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSaleList'
          description: ''
    post:
      operationId: api_finance_sales_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
  /api/finance/sales/{id}/:
    get:
      operationId: api_finance_sales_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
    put:
      operationId: api_finance_sales_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
    patch:
      operationId: api_finance_sales_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSale'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
    delete:
      operationId: api_finance_sales_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/acquisition_records/:
    get:
      operationId: api_productions_acquisition_records_list
      parameters:
      - in: query
        name: animal
        schema:
          type: integer
      - in: query
        name: animal_group
        schema:
          type: integer
      - in: query
        name: date_of_acquisition
        schema:
          type: string
          format: date
      - in: query
        name: date_range_after
        schema:
          type: string
          format: date
      - in: query
        name: date_range_before
        schema:
          type: string
          format: date
      - in: query
        name: farm
        schema:
          type: integer
      - in: query
        name: gender
        schema:
          type: string
          enum:
          - Female
          - Male
        description: |-
          * `Male` - Male
          * `Female` - Female
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: period
        schema:
          type: string
          enum:
          - last_month
          - last_week
          - last_year
          - month
          - week
          - year
        description: |-
          Period

          * `week` - This Week
          * `month` - This Month
          * `year` - This Year
          * `last_week` - Last Week
          * `last_month` - Last Month
          * `last_year` - Last Year
      - in: query
        name: quantity_min
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: weight_max
        schema:
          type: number
          format: float
      - in: query
        name: weight_min
        schema:
          type: number
          format: float
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAcquisitionRecordList'
          description: ''
    post:
      operationId: api_productions_acquisition_records_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquisitionRecord'
          description: ''
  /api/productions/acquisition_records/{id}/:
    get:
      operationId: api_productions_acquisition_records_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this acquisition record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquisitionRecord'
          description: ''
    put:
      operationId: api_productions_acquisition_records_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this acquisition record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquisitionRecord'
          description: ''
    patch:
      operationId: api_productions_acquisition_records_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this acquisition record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAcquisitionRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAcquisitionRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAcquisitionRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquisitionRecord'
          description: ''
    delete:
      operationId: api_productions_acquisition_records_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this acquisition record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/animal-breeds/:
    get:
      operationId: api_productions_animal_breeds_list
      parameters:
      - in: query
        name: animal_type
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnimalBreedList'
          description: ''
    post:
      operationId: api_productions_animal_breeds_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalBreed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnimalBreed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnimalBreed'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalBreed'
          description: ''
  /api/productions/animal-breeds/{id}/:
    get:
      operationId: api_productions_animal_breeds_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal breed.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalBreed'
          description: ''
    put:
      operationId: api_productions_animal_breeds_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal breed.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalBreed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnimalBreed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnimalBreed'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalBreed'
          description: ''
    patch:
      operationId: api_productions_animal_breeds_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal breed.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnimalBreed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnimalBreed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnimalBreed'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalBreed'
          description: ''
    delete:
      operationId: api_productions_animal_breeds_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal breed.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/animal-inventories/:
    get:
      operationId: api_productions_animal_inventories_list
      parameters:
      - in: query
        name: animal_type
        schema:
          type: integer
      - in: query
        name: breed
        schema:
          type: integer
      - in: query
        name: farm
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: quantity_max
        schema:
          type: integer
      - in: query
        name: quantity_min
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnimalInventoryList'
          description: ''
    post:
      operationId: api_productions_animal_inventories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalInventory'
          description: ''
  /api/productions/animal-inventories/{id}/:
    get:
      operationId: api_productions_animal_inventories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal inventory.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalInventory'
          description: ''
    put:
      operationId: api_productions_animal_inventories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalInventory'
          description: ''
    patch:
      operationId: api_productions_animal_inventories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnimalInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnimalInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnimalInventory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalInventory'
          description: ''
    delete:
      operationId: api_productions_animal_inventories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal inventory.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/animal-types/:
    get:
      operationId: api_productions_animal_types_list
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnimalTypeList'
          description: ''
    post:
      operationId: api_productions_animal_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnimalType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnimalType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalType'
          description: ''
  /api/productions/animal-types/{id}/:
    get:
      operationId: api_productions_animal_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalType'
          description: ''
    put:
      operationId: api_productions_animal_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnimalType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnimalType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalType'
          description: ''
    patch:
      operationId: api_productions_animal_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnimalType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnimalType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnimalType'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalType'
          description: ''
    delete:
      operationId: api_productions_animal_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/birth-records/:
    get:
      operationId: api_productions_birth_records_list
      parameters:
      - in: query
        name: animal
        schema:
          type: integer
      - in: query
        name: animal_group
        schema:
          type: integer
      - in: query
        name: date_of_birth
        schema:
          type: string
          format: date
      - in: query
        name: date_range_after
        schema:
          type: string
          format: date
      - in: query
        name: date_range_before
        schema:
          type: string
          format: date
      - in: query
        name: farm
        schema:
          type: integer
      - in: query
        name: number_of_died
        schema:
          type: integer
      - in: query
        name: number_of_female_min
        schema:
          type: integer
      - in: query
        name: number_of_male_min
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: period
        schema:
          type: string
          enum:
          - last_month
          - last_week
          - last_year
          - month
          - week
          - year
        description: |-
          Period

          * `week` - This Week
          * `month` - This Month
          * `year` - This Year
          * `last_week` - Last Week
          * `last_month` - Last Month
          * `last_year` - Last Year
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: weight_max
        schema:
          type: number
          format: float
      - in: query
        name: weight_min
        schema:
          type: number
          format: float
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBirthRecordList'
          description: ''
    post:
      operationId: api_productions_birth_records_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BirthRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BirthRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BirthRecord'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthRecord'
          description: ''
  /api/productions/birth-records/{id}/:
    get:
      operationId: api_productions_birth_records_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this birth record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthRecord'
          description: ''
    put:
      operationId: api_productions_birth_records_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this birth record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BirthRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BirthRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BirthRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthRecord'
          description: ''
    patch:
      operationId: api_productions_birth_records_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this birth record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBirthRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBirthRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBirthRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthRecord'
          description: ''
    delete:
      operationId: api_productions_birth_records_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this birth record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/died-records/:
    get:
      operationId: api_productions_died_records_list
      parameters:
      - in: query
        name: animal
        schema:
          type: integer
      - in: query
        name: animal_group
        schema:
          type: integer
      - in: query
        name: date_of_death
        schema:
          type: string
          format: date
      - in: query
        name: date_range_after
        schema:
          type: string
          format: date
      - in: query
        name: date_range_before
        schema:
          type: string
          format: date
      - in: query
        name: farm
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: period
        schema:
          type: string
          enum:
          - last_month
          - last_week
          - last_year
          - month
          - week
          - year
        description: |-
          Period

          * `week` - This Week
          * `month` - This Month
          * `year` - This Year
          * `last_week` - Last Week
          * `last_month` - Last Month
          * `last_year` - Last Year
      - in: query
        name: quantity_min
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          nullable: true
          enum:
          - cancelled
          - recorded
          - verified
        description: |-
          * `verified` - Verified
          * `recorded` - Recorded
          * `cancelled` - Cancelled
      - in: query
        name: weight_max
        schema:
          type: number
          format: float
      - in: query
        name: weight_min
        schema:
          type: number
          format: float
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiedRecordList'
          description: ''
    post:
      operationId: api_productions_died_records_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiedRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiedRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiedRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiedRecord'
          description: ''
  /api/productions/died-records/{id}/:
    get:
      operationId: api_productions_died_records_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this died record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiedRecord'
          description: ''
    put:
      operationId: api_productions_died_records_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this died record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiedRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiedRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiedRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiedRecord'
          description: ''
    patch:
      operationId: api_productions_died_records_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this died record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiedRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiedRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiedRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiedRecord'
          description: ''
    delete:
      operationId: api_productions_died_records_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this died record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/farms/{farm_id}/acquisition-records/:
    get:
      operationId: api_productions_farms_acquisition_records_list
      parameters:
      - in: query
        name: animal
        schema:
          type: integer
      - in: query
        name: animal_group
        schema:
          type: integer
      - in: query
        name: date_of_acquisition
        schema:
          type: string
          format: date
      - in: query
        name: date_range_after
        schema:
          type: string
          format: date
      - in: query
        name: date_range_before
        schema:
          type: string
          format: date
      - in: query
        name: farm
        schema:
          type: integer
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: query
        name: gender
        schema:
          type: string
          enum:
          - Female
          - Male
        description: |-
          * `Male` - Male
          * `Female` - Female
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: period
        schema:
          type: string
          enum:
          - last_month
          - last_week
          - last_year
          - month
          - week
          - year
        description: |-
          Period

          * `week` - This Week
          * `month` - This Month
          * `year` - This Year
          * `last_week` - Last Week
          * `last_month` - Last Month
          * `last_year` - Last Year
      - in: query
        name: quantity_min
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: weight_max
        schema:
          type: number
          format: float
      - in: query
        name: weight_min
        schema:
          type: number
          format: float
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAcquisitionRecordList'
          description: ''
    post:
      operationId: api_productions_farms_acquisition_records_create
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquisitionRecord'
          description: ''
  /api/productions/farms/{farm_id}/acquisition-records/{id}/:
    get:
      operationId: api_productions_farms_acquisition_records_retrieve
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this acquisition record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquisitionRecord'
          description: ''
    put:
      operationId: api_productions_farms_acquisition_records_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this acquisition record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcquisitionRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquisitionRecord'
          description: ''
    patch:
      operationId: api_productions_farms_acquisition_records_partial_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this acquisition record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAcquisitionRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAcquisitionRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAcquisitionRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquisitionRecord'
          description: ''
    delete:
      operationId: api_productions_farms_acquisition_records_destroy
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this acquisition record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/farms/{farm_id}/animal-inventories/:
    get:
      operationId: api_productions_farms_animal_inventories_list
      parameters:
      - in: query
        name: animal_type
        schema:
          type: integer
      - in: query
        name: breed
        schema:
          type: integer
      - in: query
        name: farm
        schema:
          type: integer
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: quantity_max
        schema:
          type: integer
      - in: query
        name: quantity_min
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnimalInventoryList'
          description: ''
    post:
      operationId: api_productions_farms_animal_inventories_create
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalInventory'
          description: ''
  /api/productions/farms/{farm_id}/animal-inventories/{id}/:
    get:
      operationId: api_productions_farms_animal_inventories_retrieve
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal inventory.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalInventory'
          description: ''
    put:
      operationId: api_productions_farms_animal_inventories_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnimalInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalInventory'
          description: ''
    patch:
      operationId: api_productions_farms_animal_inventories_partial_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnimalInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnimalInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnimalInventory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalInventory'
          description: ''
    delete:
      operationId: api_productions_farms_animal_inventories_destroy
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this animal inventory.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/farms/{farm_id}/birth-records/:
    get:
      operationId: api_productions_farms_birth_records_list
      parameters:
      - in: query
        name: animal
        schema:
          type: integer
      - in: query
        name: animal_group
        schema:
          type: integer
      - in: query
        name: date_of_birth
        schema:
          type: string
          format: date
      - in: query
        name: date_range_after
        schema:
          type: string
          format: date
      - in: query
        name: date_range_before
        schema:
          type: string
          format: date
      - in: query
        name: farm
        schema:
          type: integer
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: query
        name: number_of_died
        schema:
          type: integer
      - in: query
        name: number_of_female_min
        schema:
          type: integer
      - in: query
        name: number_of_male_min
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: period
        schema:
          type: string
          enum:
          - last_month
          - last_week
          - last_year
          - month
          - week
          - year
        description: |-
          Period

          * `week` - This Week
          * `month` - This Month
          * `year` - This Year
          * `last_week` - Last Week
          * `last_month` - Last Month
          * `last_year` - Last Year
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: weight_max
        schema:
          type: number
          format: float
      - in: query
        name: weight_min
        schema:
          type: number
          format: float
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBirthRecordList'
          description: ''
    post:
      operationId: api_productions_farms_birth_records_create
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BirthRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BirthRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BirthRecord'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthRecord'
          description: ''
  /api/productions/farms/{farm_id}/birth-records/{id}/:
    get:
      operationId: api_productions_farms_birth_records_retrieve
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this birth record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthRecord'
          description: ''
    put:
      operationId: api_productions_farms_birth_records_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this birth record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BirthRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BirthRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BirthRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthRecord'
          description: ''
    patch:
      operationId: api_productions_farms_birth_records_partial_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this birth record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBirthRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBirthRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBirthRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthRecord'
          description: ''
    delete:
      operationId: api_productions_farms_birth_records_destroy
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this birth record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/farms/{farm_id}/died-records/:
    get:
      operationId: api_productions_farms_died_records_list
      parameters:
      - in: query
        name: animal
        schema:
          type: integer
      - in: query
        name: animal_group
        schema:
          type: integer
      - in: query
        name: date_of_death
        schema:
          type: string
          format: date
      - in: query
        name: date_range_after
        schema:
          type: string
          format: date
      - in: query
        name: date_range_before
        schema:
          type: string
          format: date
      - in: query
        name: farm
        schema:
          type: integer
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: period
        schema:
          type: string
          enum:
          - last_month
          - last_week
          - last_year
          - month
          - week
          - year
        description: |-
          Period

          * `week` - This Week
          * `month` - This Month
          * `year` - This Year
          * `last_week` - Last Week
          * `last_month` - Last Month
          * `last_year` - Last Year
      - in: query
        name: quantity_min
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          nullable: true
          enum:
          - cancelled
          - recorded
          - verified
        description: |-
          * `verified` - Verified
          * `recorded` - Recorded
          * `cancelled` - Cancelled
      - in: query
        name: weight_max
        schema:
          type: number
          format: float
      - in: query
        name: weight_min
        schema:
          type: number
          format: float
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiedRecordList'
          description: ''
    post:
      operationId: api_productions_farms_died_records_create
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiedRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiedRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiedRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiedRecord'
          description: ''
  /api/productions/farms/{farm_id}/died-records/{id}/:
    get:
      operationId: api_productions_farms_died_records_retrieve
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this died record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiedRecord'
          description: ''
    put:
      operationId: api_productions_farms_died_records_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this died record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiedRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiedRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiedRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiedRecord'
          description: ''
    patch:
      operationId: api_productions_farms_died_records_partial_update
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this died record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiedRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiedRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiedRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiedRecord'
          description: ''
    delete:
      operationId: api_productions_farms_died_records_destroy
      parameters:
      - in: path
        name: farm_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this died record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/feed-inventory/:
    get:
      operationId: api_productions_feed_inventory_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedInventoryList'
          description: ''
    post:
      operationId: api_productions_feed_inventory_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedInventory'
          description: ''
  /api/productions/feed-inventory/{id}/:
    get:
      operationId: api_productions_feed_inventory_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed inventory.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedInventory'
          description: ''
    put:
      operationId: api_productions_feed_inventory_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedInventory'
          description: ''
    patch:
      operationId: api_productions_feed_inventory_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedInventory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedInventory'
          description: ''
    delete:
      operationId: api_productions_feed_inventory_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed inventory.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/feed-types/:
    get:
      operationId: api_productions_feed_types_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedTypeList'
          description: ''
    post:
      operationId: api_productions_feed_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedType'
          description: ''
  /api/productions/feed-types/{id}/:
    get:
      operationId: api_productions_feed_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedType'
          description: ''
    put:
      operationId: api_productions_feed_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedType'
          description: ''
    patch:
      operationId: api_productions_feed_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedType'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedType'
          description: ''
    delete:
      operationId: api_productions_feed_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/feeding-records/:
    get:
      operationId: api_productions_feeding_records_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedingRecordList'
          description: ''
    post:
      operationId: api_productions_feeding_records_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedingRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedingRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedingRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedingRecord'
          description: ''
  /api/productions/feeding-records/{id}/:
    get:
      operationId: api_productions_feeding_records_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feeding record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedingRecord'
          description: ''
    put:
      operationId: api_productions_feeding_records_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feeding record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedingRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedingRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedingRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedingRecord'
          description: ''
    patch:
      operationId: api_productions_feeding_records_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feeding record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedingRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedingRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedingRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedingRecord'
          description: ''
    delete:
      operationId: api_productions_feeding_records_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feeding record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/health-issues/:
    get:
      operationId: api_productions_health_issues_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHealthIssueList'
          description: ''
    post:
      operationId: api_productions_health_issues_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthIssue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HealthIssue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HealthIssue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthIssue'
          description: ''
  /api/productions/health-issues/{id}/:
    get:
      operationId: api_productions_health_issues_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this health issue.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthIssue'
          description: ''
    put:
      operationId: api_productions_health_issues_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this health issue.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthIssue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HealthIssue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HealthIssue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthIssue'
          description: ''
    patch:
      operationId: api_productions_health_issues_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this health issue.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHealthIssue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHealthIssue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHealthIssue'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthIssue'
          description: ''
    delete:
      operationId: api_productions_health_issues_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this health issue.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/health-records/:
    get:
      operationId: api_productions_health_records_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHealthRecordList'
          description: ''
    post:
      operationId: api_productions_health_records_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HealthRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HealthRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthRecord'
          description: ''
  /api/productions/health-records/{id}/:
    get:
      operationId: api_productions_health_records_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this health record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthRecord'
          description: ''
    put:
      operationId: api_productions_health_records_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this health record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HealthRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HealthRecord'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthRecord'
          description: ''
    patch:
      operationId: api_productions_health_records_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this health record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHealthRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHealthRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHealthRecord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthRecord'
          description: ''
    delete:
      operationId: api_productions_health_records_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this health record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/medication-types/:
    get:
      operationId: api_productions_medication_types_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicationTypeList'
          description: ''
    post:
      operationId: api_productions_medication_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationType'
          description: ''
  /api/productions/medication-types/{id}/:
    get:
      operationId: api_productions_medication_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this medication type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationType'
          description: ''
    put:
      operationId: api_productions_medication_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this medication type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationType'
          description: ''
    patch:
      operationId: api_productions_medication_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this medication type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicationType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMedicationType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMedicationType'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationType'
          description: ''
    delete:
      operationId: api_productions_medication_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this medication type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/treatments/:
    get:
      operationId: api_productions_treatments_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTreatmentList'
          description: ''
    post:
      operationId: api_productions_treatments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Treatment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Treatment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Treatment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treatment'
          description: ''
  /api/productions/treatments/{id}/:
    get:
      operationId: api_productions_treatments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this treatment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treatment'
          description: ''
    put:
      operationId: api_productions_treatments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this treatment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Treatment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Treatment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Treatment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treatment'
          description: ''
    patch:
      operationId: api_productions_treatments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this treatment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTreatment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTreatment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTreatment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treatment'
          description: ''
    delete:
      operationId: api_productions_treatments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this treatment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/productions/weight-categories/:
    get:
      operationId: api_productions_weight_categories_list
      parameters:
      - in: query
        name: max_weight
        schema:
          type: number
          format: float
      - in: query
        name: min_weight
        schema:
          type: number
          format: float
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWeightCategoryList'
          description: ''
    post:
      operationId: api_productions_weight_categories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeightCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeightCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeightCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeightCategory'
          description: ''
  /api/productions/weight-categories/{id}/:
    get:
      operationId: api_productions_weight_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weight category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeightCategory'
          description: ''
    put:
      operationId: api_productions_weight_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weight category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeightCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeightCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeightCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeightCategory'
          description: ''
    patch:
      operationId: api_productions_weight_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weight category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWeightCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWeightCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWeightCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeightCategory'
          description: ''
    delete:
      operationId: api_productions_weight_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weight category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    AcquisitionRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        weight:
          type: number
          format: double
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        unit_preis:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        total_cost:
          type: string
          readOnly: true
        date_of_acquisition:
          type: string
          format: date
          readOnly: true
        vendor:
          type: string
          nullable: true
          maxLength: 100
        receipt_number:
          type: string
          nullable: true
          maxLength: 50
        notes:
          type: string
          nullable: true
        attachment:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        farm:
          type: integer
          description: Farm ID this record belongs to
      required:
      - created_by
      - created_by_name
      - date_of_acquisition
      - gender
      - id
      - quantity
      - total_cost
      - unit_preis
    Alert:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        is_resolved:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        farm:
          type: integer
      required:
      - created_at
      - farm
      - id
      - message
    AnimalBreed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        animal_type:
          type: integer
        animal_type_name:
          type: string
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        thumbnail:
          type: string
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        farms:
          type: array
          items:
            type: integer
      required:
      - animal_type
      - animal_type_name
      - created_by
      - id
      - name
      - thumbnail
    AnimalInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal_type:
          type: integer
        animal_type_name:
          type: string
          readOnly: true
        breed:
          type: integer
        breed_name:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        farm:
          type: integer
          description: Farm ID this record belongs to
      required:
      - animal_type
      - animal_type_name
      - breed
      - breed_name
      - id
    AnimalType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        farms:
          type: array
          items:
            type: integer
      required:
      - created_by
      - id
      - name
    BirthRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
        number_of_male:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        number_of_female:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        number_of_died:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        total_born:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
          readOnly: true
        notes:
          type: string
          nullable: true
        attachment:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        farm:
          type: integer
          description: Farm ID this record belongs to
      required:
      - created_by
      - created_by_name
      - date_of_birth
      - id
      - total_born
    BlankEnum:
      enum:
      - ''
    CustomTokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    Customer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        phone:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        street:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country_name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 3
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        farm:
          type: integer
      required:
      - city
      - country_code
      - country_name
      - created_at
      - created_by
      - farm
      - id
      - name
      - postal_code
      - street
    DiedRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        weight:
          type: number
          format: double
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        date_of_death:
          type: string
          format: date
          readOnly: true
        cause:
          type: string
          nullable: true
          maxLength: 200
        notes:
          type: string
          nullable: true
        status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DiedRecordStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        attachment:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        farm:
          type: integer
          description: Farm ID this record belongs to
      required:
      - created_by
      - created_by_name
      - date_of_death
      - id
      - quantity
      - weight
    DiedRecordStatusEnum:
      enum:
      - verified
      - recorded
      - cancelled
      type: string
      description: |-
        * `verified` - Verified
        * `recorded` - Recorded
        * `cancelled` - Cancelled
    Expense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
        date:
          type: string
          format: date
        invoice_number:
          type: string
          nullable: true
          maxLength: 100
        is_recurrent:
          type: boolean
        status:
          $ref: '#/components/schemas/ExpenseStatusEnum'
        attachment:
          type: string
          format: uri
          nullable: true
          description: Image, PDF ou autre fichier justificatif
        farm:
          type: integer
        category:
          type: integer
        animal_type:
          type: integer
          nullable: true
        animal_breed:
          type: integer
          nullable: true
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        supplier:
          type: integer
          nullable: true
        payment_method:
          type: integer
          nullable: true
        created_by:
          type: integer
      required:
      - amount
      - category
      - created_at
      - created_by
      - farm
      - id
      - updated_at
    ExpenseCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          maxLength: 50
        color:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    ExpenseStatusEnum:
      enum:
      - pending
      - completed
      - cancelled
      type: string
      description: |-
        * `pending` - En attente
        * `completed` - Complétée
        * `cancelled` - Annulée
    Farm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        street:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country_name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 3
        size_hectares:
          type: number
          format: double
          nullable: true
        owner:
          type: integer
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - city
      - country_code
      - country_name
      - created_at
      - id
      - name
      - postal_code
      - street
      - updated_at
    FeedInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_expired:
          type: string
          readOnly: true
        quantity_kg:
          type: number
          format: double
        batch_number:
          type: string
          nullable: true
          maxLength: 100
        purchase_date:
          type: string
          format: date
        expiry_date:
          type: string
          format: date
          nullable: true
        purchase_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        notes:
          type: string
          nullable: true
        feed_type:
          type: integer
      required:
      - feed_type
      - id
      - is_expired
      - purchase_date
      - purchase_price
      - quantity_kg
    FeedType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        nutritional_info:
          type: string
          nullable: true
        cost_per_kg:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        supplier:
          type: integer
          nullable: true
        suitable_for:
          type: array
          items:
            type: integer
      required:
      - id
      - name
      - suitable_for
    FeedingRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        estimated_cost:
          type: string
          readOnly: true
        quantity_kg:
          type: number
          format: double
        date:
          type: string
          format: date
          readOnly: true
        notes:
          type: string
          nullable: true
        feed_type:
          type: integer
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        animal_type:
          type: integer
        created_by:
          type: integer
          nullable: true
      required:
      - animal_type
      - date
      - estimated_cost
      - feed_type
      - id
      - quantity_kg
    GenderEnum:
      enum:
      - Male
      - Female
      type: string
      description: |-
        * `Male` - Male
        * `Female` - Female
    HealthIssue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        symptoms:
          type: string
          nullable: true
        treatments:
          type: string
          nullable: true
        is_contagious:
          type: boolean
        farm:
          type: integer
        created_by:
          type: integer
          nullable: true
      required:
      - farm
      - id
      - name
    HealthRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        symptoms:
          type: string
          nullable: true
        diagnosis:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          readOnly: true
        end_date:
          type: string
          format: date
          nullable: true
        is_resolved:
          type: boolean
        notes:
          type: string
          nullable: true
        farm:
          type: integer
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        health_issue:
          type: integer
          nullable: true
        created_by:
          type: integer
          nullable: true
      required:
      - farm
      - id
      - start_date
    MedicationType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        dosage_instructions:
          type: string
          nullable: true
        withdrawal_period_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        supplier:
          type: integer
          nullable: true
      required:
      - id
      - name
    NullEnum:
      enum:
      - null
    PaginatedAcquisitionRecordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AcquisitionRecord'
    PaginatedAlertList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
    PaginatedAnimalBreedList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnimalBreed'
    PaginatedAnimalInventoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnimalInventory'
    PaginatedAnimalTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnimalType'
    PaginatedBirthRecordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BirthRecord'
    PaginatedCustomerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    PaginatedDiedRecordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DiedRecord'
    PaginatedExpenseCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseCategory'
    PaginatedExpenseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
    PaginatedFarmList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Farm'
    PaginatedFeedInventoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedInventory'
    PaginatedFeedTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedType'
    PaginatedFeedingRecordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedingRecord'
    PaginatedHealthIssueList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HealthIssue'
    PaginatedHealthRecordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HealthRecord'
    PaginatedMedicationTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicationType'
    PaginatedPaymentMethodList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
    PaginatedRoleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    PaginatedSaleItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SaleItem'
    PaginatedSaleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Sale'
    PaginatedSupplierList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Supplier'
    PaginatedTreatmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Treatment'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedWeightCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WeightCategory'
    PatchedAcquisitionRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        weight:
          type: number
          format: double
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        unit_preis:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        total_cost:
          type: string
          readOnly: true
        date_of_acquisition:
          type: string
          format: date
          readOnly: true
        vendor:
          type: string
          nullable: true
          maxLength: 100
        receipt_number:
          type: string
          nullable: true
          maxLength: 50
        notes:
          type: string
          nullable: true
        attachment:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        farm:
          type: integer
          description: Farm ID this record belongs to
    PatchedAlert:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        is_resolved:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        farm:
          type: integer
    PatchedAnimalBreed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        animal_type:
          type: integer
        animal_type_name:
          type: string
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        thumbnail:
          type: string
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        farms:
          type: array
          items:
            type: integer
    PatchedAnimalInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal_type:
          type: integer
        animal_type_name:
          type: string
          readOnly: true
        breed:
          type: integer
        breed_name:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        farm:
          type: integer
          description: Farm ID this record belongs to
    PatchedAnimalType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        farms:
          type: array
          items:
            type: integer
    PatchedBirthRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
        number_of_male:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        number_of_female:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        number_of_died:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        total_born:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
          readOnly: true
        notes:
          type: string
          nullable: true
        attachment:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        farm:
          type: integer
          description: Farm ID this record belongs to
    PatchedCustomer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        phone:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        street:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country_name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 3
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        farm:
          type: integer
    PatchedDiedRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        weight:
          type: number
          format: double
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        date_of_death:
          type: string
          format: date
          readOnly: true
        cause:
          type: string
          nullable: true
          maxLength: 200
        notes:
          type: string
          nullable: true
        status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DiedRecordStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        attachment:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        farm:
          type: integer
          description: Farm ID this record belongs to
    PatchedExpense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
        date:
          type: string
          format: date
        invoice_number:
          type: string
          nullable: true
          maxLength: 100
        is_recurrent:
          type: boolean
        status:
          $ref: '#/components/schemas/ExpenseStatusEnum'
        attachment:
          type: string
          format: uri
          nullable: true
          description: Image, PDF ou autre fichier justificatif
        farm:
          type: integer
        category:
          type: integer
        animal_type:
          type: integer
          nullable: true
        animal_breed:
          type: integer
          nullable: true
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        supplier:
          type: integer
          nullable: true
        payment_method:
          type: integer
          nullable: true
        created_by:
          type: integer
    PatchedExpenseCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          maxLength: 50
        color:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFarm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        street:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country_name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 3
        size_hectares:
          type: number
          format: double
          nullable: true
        owner:
          type: integer
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeedInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_expired:
          type: string
          readOnly: true
        quantity_kg:
          type: number
          format: double
        batch_number:
          type: string
          nullable: true
          maxLength: 100
        purchase_date:
          type: string
          format: date
        expiry_date:
          type: string
          format: date
          nullable: true
        purchase_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        notes:
          type: string
          nullable: true
        feed_type:
          type: integer
    PatchedFeedType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        nutritional_info:
          type: string
          nullable: true
        cost_per_kg:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        supplier:
          type: integer
          nullable: true
        suitable_for:
          type: array
          items:
            type: integer
    PatchedFeedingRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        estimated_cost:
          type: string
          readOnly: true
        quantity_kg:
          type: number
          format: double
        date:
          type: string
          format: date
          readOnly: true
        notes:
          type: string
          nullable: true
        feed_type:
          type: integer
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        animal_type:
          type: integer
        created_by:
          type: integer
          nullable: true
    PatchedHealthIssue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        symptoms:
          type: string
          nullable: true
        treatments:
          type: string
          nullable: true
        is_contagious:
          type: boolean
        farm:
          type: integer
        created_by:
          type: integer
          nullable: true
    PatchedHealthRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        symptoms:
          type: string
          nullable: true
        diagnosis:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          readOnly: true
        end_date:
          type: string
          format: date
          nullable: true
        is_resolved:
          type: boolean
        notes:
          type: string
          nullable: true
        farm:
          type: integer
        animal:
          type: integer
          nullable: true
        animal_group:
          type: integer
          nullable: true
        health_issue:
          type: integer
          nullable: true
        created_by:
          type: integer
          nullable: true
    PatchedMedicationType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        dosage_instructions:
          type: string
          nullable: true
        withdrawal_period_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        supplier:
          type: integer
          nullable: true
    PatchedPaymentMethod:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
    PatchedRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        permissions:
          type: array
          items:
            type: integer
    PatchedSale:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        farm:
          type: integer
        customer:
          type: integer
          nullable: true
          description: Optional customer; leave blank for walk-in or unknown buyers.
        invoice_number:
          type: string
          maxLength: 50
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        balance_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        payment_method:
          type: integer
          nullable: true
        sale_date:
          type: string
          format: date
          readOnly: true
        notes:
          type: string
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/SaleItem'
    PatchedSaleItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal_id:
          type: integer
          nullable: true
        animal_group_id:
          type: integer
          nullable: true
        animal_type_id:
          type: integer
          nullable: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        subtotal:
          type: string
          readOnly: true
    PatchedSupplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        contact_person:
          type: string
          nullable: true
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        street:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country_name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 3
        farms:
          type: array
          items:
            type: integer
        notes:
          type: string
          nullable: true
        is_active:
          type: boolean
          title: Active
    PatchedTreatment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        safe_consumption_date:
          type: string
          readOnly: true
        date_administered:
          type: string
          format: date
        dosage:
          type: string
          maxLength: 100
        notes:
          type: string
          nullable: true
        health_record:
          type: integer
        medication:
          type: integer
        administered_by:
          type: integer
          nullable: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        profile_picture:
          type: string
          format: uri
          nullable: true
        street:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country_name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 3
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
    PatchedWeightCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        min_weight:
          type: number
          format: double
        max_weight:
          type: number
          format: double
        created_by:
          type: integer
          readOnly: true
          nullable: true
    PaymentMethod:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - id
      - name
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        permissions:
          type: array
          items:
            type: integer
      required:
      - id
      - name
    Sale:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        farm:
          type: integer
        customer:
          type: integer
          nullable: true
          description: Optional customer; leave blank for walk-in or unknown buyers.
        invoice_number:
          type: string
          maxLength: 50
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        balance_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        payment_method:
          type: integer
          nullable: true
        sale_date:
          type: string
          format: date
          readOnly: true
        notes:
          type: string
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/SaleItem'
      required:
      - balance_due
      - created_at
      - created_by
      - farm
      - id
      - invoice_number
      - items
      - sale_date
      - total_amount
    SaleItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        animal_id:
          type: integer
          nullable: true
        animal_group_id:
          type: integer
          nullable: true
        animal_type_id:
          type: integer
          nullable: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        subtotal:
          type: string
          readOnly: true
      required:
      - id
      - subtotal
      - unit_price
    SeverityEnum:
      enum:
      - low
      - medium
      - high
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
    Supplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        contact_person:
          type: string
          nullable: true
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        street:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country_name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 3
        farms:
          type: array
          items:
            type: integer
        notes:
          type: string
          nullable: true
        is_active:
          type: boolean
          title: Active
      required:
      - city
      - country_code
      - country_name
      - farms
      - id
      - name
      - postal_code
      - street
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    Treatment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        safe_consumption_date:
          type: string
          readOnly: true
        date_administered:
          type: string
          format: date
        dosage:
          type: string
          maxLength: 100
        notes:
          type: string
          nullable: true
        health_record:
          type: integer
        medication:
          type: integer
        administered_by:
          type: integer
          nullable: true
      required:
      - date_administered
      - dosage
      - health_record
      - id
      - medication
      - safe_consumption_date
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        profile_picture:
          type: string
          format: uri
          nullable: true
        street:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country_name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 3
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
      required:
      - city
      - country_code
      - country_name
      - id
      - postal_code
      - roles
      - street
      - username
    WeightCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        min_weight:
          type: number
          format: double
        max_weight:
          type: number
          format: double
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - created_by
      - id
      - max_weight
      - min_weight
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
