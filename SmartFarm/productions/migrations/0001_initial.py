# Generated by Django 5.2 on 2025-05-10 11:39

import django.db.models.deletion
import utilities.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcquisitionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_acquisition', models.DateField(auto_now_add=True)),
                ('quantity', models.PositiveIntegerField()),
                ('weight', models.FloatField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('unit_preis', models.DecimalField(decimal_places=2, max_digits=8)),
                ('vendor', models.CharField(blank=True, max_length=100, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='expenses/attachments/%Y/%m/', validators=[utilities.validators.validate_attachment_extension])),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acquisition_records', to='account.farm')),
            ],
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_id', models.CharField(max_length=50, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_of_acquisition', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('sold', 'Sold'), ('died', 'Died'), ('quarantine', 'Quarantine')], default='active', max_length=20)),
                ('initial_weight', models.FloatField(blank=True, null=True)),
                ('current_weight', models.FloatField(blank=True, null=True)),
                ('last_weigh_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('acquisition_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animals', to='productions.acquisitionrecord')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animals', to='account.farm')),
            ],
        ),
        migrations.AddField(
            model_name='acquisitionrecord',
            name='animal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productions.animal'),
        ),
        migrations.CreateModel(
            name='AnimalBreed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/animal_breeds/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('farms', models.ManyToManyField(blank=True, related_name='animal_breeds', to='account.farm')),
            ],
        ),
        migrations.AddField(
            model_name='animal',
            name='breed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='productions.animalbreed'),
        ),
        migrations.CreateModel(
            name='AnimalGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('location', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('breed', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='productions.animalbreed')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animal_groups', to='account.farm')),
            ],
        ),
        migrations.AddField(
            model_name='acquisitionrecord',
            name='animal_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productions.animalgroup'),
        ),
        migrations.CreateModel(
            name='AnimalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='animal_types/')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('farms', models.ManyToManyField(blank=True, related_name='animal_types', to='account.farm')),
            ],
        ),
        migrations.AddField(
            model_name='animalgroup',
            name='animal_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='productions.animaltype'),
        ),
        migrations.AddField(
            model_name='animalbreed',
            name='animal_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breeds', to='productions.animaltype'),
        ),
        migrations.AddField(
            model_name='animal',
            name='animal_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='productions.animaltype'),
        ),
        migrations.CreateModel(
            name='BirthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(auto_now_add=True)),
                ('number_of_male', models.PositiveIntegerField(default=0)),
                ('number_of_female', models.PositiveIntegerField(default=0)),
                ('number_of_died', models.PositiveIntegerField(default=0)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='expenses/attachments/%Y/%m/', validators=[utilities.validators.validate_attachment_extension])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productions.animal')),
                ('animal_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productions.animalgroup')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='birth_records', to='account.farm')),
            ],
        ),
        migrations.AddField(
            model_name='animal',
            name='birth_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animals', to='productions.birthrecord'),
        ),
        migrations.CreateModel(
            name='DiedRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_death', models.DateField(auto_now_add=True)),
                ('weight', models.FloatField()),
                ('quantity', models.PositiveIntegerField()),
                ('cause', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('verified', 'Verified'), ('recorded', 'Recorded'), ('cancelled', 'Cancelled')], max_length=10, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='expenses/attachments/%Y/%m/', validators=[utilities.validators.validate_attachment_extension])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productions.animal')),
                ('animal_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productions.animalgroup')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='died_records', to='account.farm')),
            ],
        ),
        migrations.AddField(
            model_name='animal',
            name='death_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animals', to='productions.diedrecord'),
        ),
        migrations.CreateModel(
            name='FeedType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('nutritional_info', models.TextField(blank=True, null=True)),
                ('cost_per_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('suitable_for', models.ManyToManyField(related_name='suitable_feeds', to='productions.animaltype')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='FeedInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_kg', models.FloatField()),
                ('batch_number', models.CharField(blank=True, max_length=100, null=True)),
                ('purchase_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('feed_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productions.feedtype')),
            ],
        ),
        migrations.CreateModel(
            name='FeedingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_kg', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feeding_records', to='productions.animal')),
                ('animal_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feeding_records', to='productions.animalgroup')),
                ('animal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productions.animaltype')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('feed_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productions.feedtype')),
            ],
        ),
        migrations.CreateModel(
            name='HealthCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('symptoms', models.TextField(blank=True, null=True)),
                ('treatments', models.TextField(blank=True, null=True)),
                ('is_contagious', models.BooleanField(default=False)),
                ('prevention_measures', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HealthIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('symptoms', models.TextField(blank=True, null=True)),
                ('treatments', models.TextField(blank=True, null=True)),
                ('is_contagious', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_health_issues', to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_issues', to='account.farm')),
            ],
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptoms', models.TextField(blank=True, null=True)),
                ('diagnosis', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='health_records', to='productions.animal')),
                ('animal_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_health_records', to='productions.animalgroup')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to='account.farm')),
                ('health_issue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productions.healthissue')),
            ],
        ),
        migrations.CreateModel(
            name='MedicationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('dosage_instructions', models.TextField(blank=True, null=True)),
                ('withdrawal_period_days', models.PositiveIntegerField(default=0)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_administered', models.DateField()),
                ('dosage', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True, null=True)),
                ('administered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('health_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='productions.healthrecord')),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='productions.medicationtype')),
            ],
        ),
        migrations.CreateModel(
            name='AdministeredTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_administered', models.DateField()),
                ('dosage', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('administered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('health_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productions.healthrecord')),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='productions.treatment')),
            ],
        ),
        migrations.CreateModel(
            name='AnimalInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('breed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='productions.animalbreed')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animal_inventories', to='account.farm')),
                ('animal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='productions.animaltype')),
            ],
            options={
                'unique_together': {('farm', 'animal_type', 'breed')},
            },
        ),
        migrations.CreateModel(
            name='WeightCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_weight', models.FloatField()),
                ('max_weight', models.FloatField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('min_weight', 'max_weight')},
            },
        ),
    ]
